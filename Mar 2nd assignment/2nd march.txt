Q1: What is Matplotlib? Why is it used? Name five plots that can be plotted using the Pyplot module of
Matplotlib.

Matplotlib is a data visualization library in Python that is widely used for creating static, animated, and interactive plots. It is a powerful tool for creating visualizations, such as line charts, scatter plots, bar plots, histograms, and more.

Matplotlib is used for a wide range of applications, such as data exploration, data analysis, scientific computing, and machine learning. It allows you to create high-quality, publication-ready visualizations with minimal code.

Pyplot is a module within Matplotlib that provides a simple interface for creating plots. Here are five common types of plots that can be plotted using the Pyplot module:

Line plot: A line plot is a type of plot that displays data as a series of points connected by a line. It is used to show trends over time or to compare different sets of data.

Scatter plot: A scatter plot is a type of plot that displays data as a collection of points. It is used to show the relationship between two variables.

Bar plot: A bar plot is a type of plot that displays data as bars. It is used to compare different categories of data.

Histogram: A histogram is a type of plot that displays the distribution of a dataset. It is used to show how often a value occurs in a dataset.

Pie chart: A pie chart is a type of plot that displays data as a circle divided into slices. It is used to show how a whole is divided into parts.

Q2: What is a scatter plot? Use the following code to generate data for x and y. Using this generated data
plot a scatter plot.

A scatter plot is a type of data visualization that displays the relationship between two variables. It is a graph in which the values of two variables are plotted as points on a two-dimensional coordinate system. Each point represents an observation or a data point.

import numpy as np
import matplotlib.pyplot as mt
np.random.seed(3)
x = 3 + np.random.normal(0, 2, 50)
y = 3 + np.random.normal(0, 2, len(x))
mt.scatter(x,y)
mt.xlabel("this is x axis in gobi assginment")
mt.ylabel("this is y axis in gobi assginment")
mt.title("Gobi's assigment")


Q3: Why is the subplot() function used? Draw four line plots using the subplot() function.

The subplot() function in Matplotlib is used to create multiple plots in a single figure. It takes three arguments: the number of rows, the number of columns, and the plot number. By specifying the plot number, you can create multiple plots and arrange them in different ways within a single figure.

import numpy as np
import matplotlib.pyplot as plt
x1 = np.array([0, 1, 2, 3, 4, 5])
y1 = np.array([0, 100, 200, 300, 400, 500])
x2 = np.array([0, 1, 2, 3, 4, 5])
y2 = np.array([50, 20, 40, 20, 60, 70])
x3 = np.array([0, 1, 2, 3, 4, 5])
y3 = np.array([10, 20, 30, 40, 50, 60])
x4 = np.array([0, 1, 2, 3, 4, 5])
y4 = np.array([200, 350, 250, 550, 450, 150])
fig, axs = plt.subplots(2, 2)
axs[0, 0].plot(x1, y1)
axs[0, 0].set_title('Line 1')
axs[0, 1].plot(x2, y2)
axs[0, 1].set_title('Line 2')
axs[1, 0].plot(x3, y3)
axs[1, 0].set_title('Line 3')
axs[1, 1].plot(x4, y4)
axs[1, 1].set_title('Line 4')
plt.tight_layout()
plt.show()

Q4: What is a bar plot? Why is it used? Using the following data plot a bar plot and a horizontal bar plot.

A bar plot, also known as a bar chart, is a type of data visualization that displays data using rectangular bars. In a bar plot, the height or length of each bar corresponds to the value of a particular category or variable.

Bar plots are commonly used to compare the values of different categories or variables. For example, you might use a bar plot to compare the sales of different products, the population of different cities, or the scores of different teams in a sports league.

import numpy as np
company = np.array(["Apple", "Microsoft", "Google", "AMD"])
profit = np.array([3000, 8000, 1000, 10000])
plt.bar(company,profit)
plt.barh(company,profit)


Q5: What is a box plot? Why is it used? Using the following data plot a box plot.
box1 = np.random.normal(100, 10, 200)
box2 = np.random.normal(90, 20, 200)

A box plot, also known as a box-and-whisker plot, is a type of data visualization that summarizes the distribution of a numerical variable. It displays the median, quartiles, and outliers of the data using a rectangular box and two whiskers.

The box represents the interquartile range (IQR), which is the middle 50% of the data. The bottom and top of the box represent the first and third quartiles (Q1 and Q3), respectively. The line inside the box represents the median, which is the middle value of the data. The whiskers extend from the box to the minimum and maximum values within 1.5 times the IQR, and any values beyond the whiskers are considered outliers.

import numpy as np
import matplotlib.pyplot as plt
box1 = np.random.normal(100, 10, 200)
box2 = np.random.normal(90, 20, 200)
data = [box1, box2]
plt.boxplot(data)

