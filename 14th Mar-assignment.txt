Q1: Data Encoding
Definition: Data encoding is the process of converting categorical or text data into a numerical format suitable for machine learning algorithms.
Usefulness: It allows algorithms to process categorical data, enabling the inclusion of non-numeric information in predictive models.
Q2: Nominal Encoding
Nominal Encoding: Assigns a unique integer value to each category without any specific ordering.
Example: Using nominal encoding for 'City' categories in a dataset where each city is assigned a unique integer (e.g., 1 for New York, 2 for London).
Q3: When is Nominal Encoding Preferred over One-Hot Encoding?
Nominal Encoding Preference: When the categorical data doesn't have a hierarchical relationship or inherent order among its categories.
Example: In the 'Color' feature where colors like red, blue, and green don't possess any ordinal relationship, nominal encoding is preferred.
Q4: Choosing an Encoding Technique for 5 Unique Values
Choice of Encoding: Nominal encoding is suitable when there's no inherent ordering among the categories. It simplifies the representation of categorical data into integers.
Q5: Calculating New Columns from Nominal Encoding
Calculation: For each categorical column, if it has 'n' unique values, nominal encoding creates 'n' new columns.
Example Calculation: If two columns have 5 unique values each, nominal encoding would create 5 + 5 = 10 new columns.
Q6: Choosing an Encoding Technique for Animal Data
Choice of Encoding: One-hot encoding might be more suitable here as different species, habitats, and diets don't inherently possess a hierarchical relationship.
Q7: Encoding Technique for Customer Churn Prediction Dataset
Step-by-Step Implementation:
Identify Categorical Columns: Gender and Contract Type.
Apply Nominal Encoding: Use label encoding for 'Gender' (if binary) and 'Contract Type' (if no inherent order).
One-Hot Encoding (if required): If 'Contract Type' has no ordinal relationship, apply one-hot encoding to prevent ordinal assumptions.